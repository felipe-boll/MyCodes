import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    private static ArrayList<Tutor> tutores = new ArrayList<>();
    private static ArrayList<Pet> pets = new ArrayList<>();
    private static ArrayList<Funcionario> funcionarios = new ArrayList<>();
    private static ArrayList<Servico> servicos = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int opcao;
        do {
            System.out.println("\n=== Veterinária Debug Pet ===");
            System.out.println("1 - Cadastrar Tutor");
            System.out.println("2 - Cadastrar Pet");
            System.out.println("3 - Cadastrar Funcionário");
            System.out.println("4 - Cadastrar Serviço");
            System.out.println("5 - Listar Tutores");
            System.out.println("6 - Listar Pets");
            System.out.println("7 - Listar Funcvionários");
            System.out.println("8 - Listar Serviços");
            System.out.println("9 - Agendar Serviço");
            System.out.println("0 - Sair");
            System.out.print("Escolha uma opção: ");
            
            opcao = scanner.nextInt();
            scanner.nextLine(); // Limpar o buffer

            switch (opcao) {
                case 1:
                    cadastrarTutor();
                    break;
                case 2:
                    cadastrarPet();
                    break;
                case 3:
                    cadastrarFuncionario();
                    break;
                case 4:
                    cadastrarServico();
                    break;
                case 5:
                    listarTutores();
                    break;
                case 6:
                    listarPets();
                    break;
                case 7:
                    listarFuncionarios();
                    break;
                case 8:
                    listarServicos();
                    break;
                case 9:
                    agendarServico();
                    break;
                case 0:
                    System.out.println("Obrigado por utilizar nosso sistema!");
                    break;
                default:
                    System.out.println("Opção inválida!");
            }
        } while (opcao != 0);
        
        scanner.close();
    }

    private static void cadastrarTutor() {
        System.out.println("\n=== Cadastro de Tutor ===");
        System.out.print("Nome: ");
        String nome = scanner.nextLine();
        System.out.print("CPF: ");
        String cpf = scanner.nextLine();
        System.out.print("Email: ");
        String email = scanner.nextLine();
        System.out.print("Telefone: ");
        String telefone = scanner.nextLine();
        System.out.print("Idade: ");
        int idade = scanner.nextInt();
        scanner.nextLine(); // Limpar buffer
        System.out.print("Endereço: ");
        String endereco = scanner.nextLine();

        Tutor tutor = new Tutor(nome, cpf, email, telefone, idade, endereco, new ArrayList<>(), new ArrayList<>());
        tutores.add(tutor);
        System.out.println("Tutor cadastrado com sucesso!");
    }

    private static void cadastrarPet() {
        if (tutores.isEmpty()) {
            System.out.println("É necessário cadastrar um tutor primeiro!");
            return;
        }

        System.out.println("\n=== Cadastro de Pet ===");
        Pet pet = new Pet();
        
        System.out.print("Nome: ");
        pet.setNome(scanner.nextLine());
        System.out.print("Raça: ");
        pet.setRaca(scanner.nextLine());
        System.out.print("Sexo (M/F): ");
        pet.setSexo(scanner.nextLine());
        System.out.print("Idade: ");
        pet.setIdade(scanner.nextLine());
        System.out.print("Peso: ");
        pet.setPeso(scanner.nextDouble());
        scanner.nextLine(); // Limpar buffer

        // Listar tutores para seleção
        System.out.println("\nTutores disponíveis:");
        for (int i = 0; i < tutores.size(); i++) {
            System.out.println(i + " - " + tutores.get(i).getNome());
        }
        System.out.print("Selecione o tutor (número): ");
        int tutorIndex = scanner.nextInt();
        scanner.nextLine(); // Limpar buffer

        if (tutorIndex >= 0 && tutorIndex < tutores.size()) {
            Tutor tutor = tutores.get(tutorIndex);
            pet.setTutor(tutor);
            tutor.addPet(pet);
            pets.add(pet);
            System.out.println("Pet cadastrado com sucesso!");
        } else {
            System.out.println("Tutor inválido!");
        }
    }

    private static void cadastrarFuncionario() {
        System.out.println("\n=== Cadastro de Funcionário ===");
        System.out.print("Nome: ");
        String nome = scanner.nextLine();
        System.out.print("CPF: ");
        String cpf = scanner.nextLine();
        System.out.print("Email: ");
        String email = scanner.nextLine();
        System.out.print("Telefone: ");
        String telefone = scanner.nextLine();
        System.out.print("Idade: ");
        int idade = scanner.nextInt();
        scanner.nextLine(); // Limpar buffer
        System.out.print("Endereço: ");
        String endereco = scanner.nextLine();
        System.out.print("Cargo: ");
        String cargo = scanner.nextLine();
        System.out.print("Salário: ");
        double salario = scanner.nextDouble();
        scanner.nextLine(); // Limpar buffer

        Funcionario funcionario = new Funcionario(nome, cpf, email, telefone, idade, endereco, cargo, salario);
        funcionarios.add(funcionario);
        System.out.println("Funcionário cadastrado com sucesso!");
    }

    private static void cadastrarServico() {
        System.out.println("\n=== Cadastro de Serviço ===");
        Servico servico = new Servico();
        
        System.out.print("Descrição: ");
        servico.setDescricao(scanner.nextLine());
        System.out.print("Valor: ");
        servico.setValor(scanner.nextDouble());
        scanner.nextLine(); // Limpar buffer
        System.out.print("Data: ");
        servico.setData(scanner.nextLine());
        servicos.add(servico);
        System.out.println("Serviço cadastrado com sucesso!");
    }

    private static void listarTutores() {
        System.out.println("\n=== Lista de Tutores ===");
        if (tutores.isEmpty()) {
            System.out.println("Nenhum tutor cadastrado.");
            return;
        }
        for (Tutor tutor : tutores) {
            System.out.println("Nome: " + tutor.getNome());
            System.out.println("CPF: " + tutor.getCpf());
            System.out.println("Telefone: " + tutor.getTelefone());
            System.out.println("Email: " + tutor.getEmail());
            System.out.println("--------------------");
        }
    }

    private static void listarPets() {
        System.out.println("\n=== Lista de Pets ===");
        if (pets.isEmpty()) {
            System.out.println("Nenhum pet cadastrado.");
            return;
        }
        for (Pet pet : pets) {
            System.out.println("Nome: " + pet.getNome());
            System.out.println("Raça: " + pet.getRaca());
            System.out.println("Sexo: " + pet.getSexo());
            System.out.println("Idade: " + pet.getIdade());
            System.out.println("Peso: " + pet.getPeso());
            System.out.println("Tutor: " + (pet.getTutor() != null ? pet.getTutor().getNome() : "Sem tutor"));
            System.out.println("--------------------");
        }
    }

    private static void listarFuncionarios() {
        System.out.println("\n=== Lista de Funcionários ===");
        if (funcionarios.isEmpty()) {
            System.out.println("Nenhum funcionário cadastrado.");
            return;
        }
        for (Funcionario funcionario : funcionarios) {
            System.out.println("Nome: " + funcionario.getNome());
            System.out.println("CPF: " + funcionario.getCpf());
            System.out.println("Telefone: " + funcionario.getTelefone());
            System.out.println("Email: " + funcionario.getEmail());
            System.out.println("Cargo: " + funcionario.getCargo());
            System.out.println("--------------------");
        }
    }

    private static void listarServicos() {
        System.out.println("\n=== Lista de Serviços ===");
        if (servicos.isEmpty()) {
            System.out.println("Nenhum serviço cadastrado.");
            return;
        }
        for (int i = 0; i < servicos.size(); i++) {
            Servico servico = servicos.get(i);
            System.out.println(i + " - " + servico.getDescricao() + " (R$ " + servico.getValor() + ")");
        }
    }

    private static void agendarServico() {
        if (pets.isEmpty() || servicos.isEmpty()) {
            System.out.println("É necessário ter pets e serviços cadastrados para agendar um serviço!");
            return;
        }

        System.out.println("\n=== Agendamento de Serviço ===");
        
        // Selecionar pet
        System.out.println("\nPets disponíveis:");
        for (int i = 0; i < pets.size(); i++) {
            Pet pet = pets.get(i);
            System.out.println(i + " - " + pet.getNome() + " (Tutor: " + 
                (pet.getTutor() != null ? pet.getTutor().getNome() : "Sem tutor") + ")");
        }
        System.out.print("Selecione o pet (número): ");
        int petIndex = scanner.nextInt();
        scanner.nextLine(); // Limpar buffer

        if (petIndex < 0 || petIndex >= pets.size()) {
            System.out.println("Pet inválido!");
            return;
        }

        // Selecionar serviço
        System.out.println("\nServiços disponíveis:");
        listarServicos();
        System.out.print("Selecione o serviço (número): ");
        int servicoIndex = scanner.nextInt();
        scanner.nextLine(); // Limpar buffer

        if (servicoIndex < 0 || servicoIndex >= servicos.size()) {
            System.out.println("Serviço inválido!");
            return;
        }

        // Vincular pet ao serviço
        Pet pet = pets.get(petIndex);
        Servico servico = servicos.get(servicoIndex);
        servico.setPet(pet);
        pet.getTutor().addServico(servico);
        
        System.out.println("Serviço agendado com sucesso!");
        System.out.println("Serviço agendado com sucesso!");
    }
}
